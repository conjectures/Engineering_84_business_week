# AWS Playbook
---
- name: Creating EC2 Instances
  hosts: localhost
  connection: local
  vars_files:
    - group_vars/all/pass.yaml
  gather_facts: false

  tasks:
    - name: Get Info Block
      block:
        - name: Print debug info
          debug: msg="{{aws_access_key}}"

      tags: ['always', 'getinfoonly']

    - name: Provisioning Instances
      block:
        - name: Provision "{{item}}" 
          tags: create_ec2
          ec2:
            region: eu-west-1
            key_name: eng84devops
            aws_access_key: "{{aws_access_key}}"
            aws_secret_key: "{{aws_secret_key}}"
            # security group
            # group:
            instance_type: t2.micro
            image: ami-038d7b856fe7557b3
            wait: yes
            wait_timeout: 500
            count: 1
            private_ip: "{{item.private_ip}}"
            instance_tags:
              Name: "{{item.name}}"
              os: ubuntu
              group: "{{item.groups}}"

            monitoring: no
            vpc_subnet_id: subnet-02c6d569a098d5e79
            assign_public_ip: yes
          register: ec2
          delegate_to: localhost
          loop:
            - { name: 'eng84_alexis_controller', groups: 'control' , private_ip: '10.0.1.5'}
            - { name: 'eng84_alexis_application', groups: 'application' , private_ip: '10.0.1.6'}
            - { name: 'eng84_alexis_database', groups: 'database' , private_ip: '10.0.1.7'}
          register: ec2
      tags: ['never', 'ec2-create']

    - name: Add Instances to Host Group
      add_host:
        hostname: "{{item.instances[0].public_ip}}"
        groupname: "{{item.instances[0].tags.group}}" 
      loop: "{{ec2.results}}"
      tags: ['never', 'ec2-create']

    - name: Wait for SSH to come up
      local_action:
        module: wait_for
        host: "{{item.instances[0].public_ip}}"
        port: 22
        delay: 10
        timeout: 120
      loop: "{{ec2.results}}"
      tags: ['never', 'ec2-create', 'ec2']

    - name: Add Controller key to known hosts
      connection: local
      shell: "ssh-keyscan -H {{groups.control}} >> ~/.ssh/known_hosts"
      tags: ['never', 'ec2-create', 'ec2']


- name: Configure Controller
  hosts: control 
  gather_facts: true
  become: true
  remote_user: ubuntu
  tasks:
    - name: Synchronise files between controller database
      ansible.posix.synchronize:
        src: /home/vagrant/controller
        dest: /home/ubuntu/
      tags: ['never', 'ec2-controller', 'ec2-database']

    - name: Synchronise files between controller database
      ansible.posix.synchronize:
        src: /home/vagrant/application
        dest: /home/ubuntu/
      tags: ['never', 'ec2-controller', 'ec2-database']

- name: Set up SSH Agent forwarding
  hosts: localhost
  gather_facts: true
  become: true
  vars:
    controller_host: "{{ groups.control }}"
  tasks:
    - name: set up config file
      copy:
        dest: "/.ssh/config"
        content: |
          Host {{controller_host}}
            ForwardAgent yes

      #     - name: run provision file 
      #       shell: db_env/provision.sh 
      #       tags: ['never', 'ec2-configure']
      #
